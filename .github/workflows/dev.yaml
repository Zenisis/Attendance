# name: dev_deploy
# on:
#   push:
#     branches: 
#      - main
#   workflow_dispatch:

# jobs:
#   build-and-run:
#    runs-on: ubuntu-latest


#    steps:
#     - name: checkout code
#       uses : actions/checkout@v3


#     - name : Configure  aws credentials
#       uses : aws-actions/configure-aws-credentials@v4
#       with:
#        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#        aws-secret-access-key-id: ${{ secrets.AWS_SECRET_ACCESS_KEY}}
#        aws-region: us-east-1

#     - name: Login to ecr
#       id: login-ecr
#       uses: aws-actions/amazom-ecr-login@v1

#     - name: Build ,tag ,push docker iamge to amazon ecr
#       id: build-image
#       env:
#        ECR_REGISTRT: ${{ steps.login-ecr.outputs.registry }}
#        ECR_REPOSITORY: attendance-app
#        IMAGE_TAG: ${{ github.sha }}
#       run: |
#         docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
#         docker tag $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:latest
#         echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT
#         docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
#         docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest

#  terraform-deploy:
#   needs: build-and-run
#   runs-on: ubuntu-latest
#   defaults:
#    run:
#     working-dir: ./terrraform
#   steps:
#       - name: Checkout code
#         uses: actions/checkout@v3

#       - name: Configure AWS credentials
#         uses: aws-actions/configure-aws-credentials@v1
#         with:
#           aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#           aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#           aws-region: us-east-1

#       - name: Setup Terraform
#         uses: hashicorp/setup-terraform@v1
#         with:
#           terraform_version: 1.2.0

#       - name: Terraform Init
#         run: terraform init
        
#       - name: Terraform Format
#         run: terraform fmt -check
#         continue-on-error: true

#       - name: Terraform Validate
#         run: terraform validate

#       - name: Terraform Plan
#         run: terraform plan 
        
#       - name: Terraform Apply
#         if: github.ref == 'refs/heads/main' && github.event_name == 'push'
#         run: terraform apply -auto-approve   





name: dev_deploy
on:
  push:
    branches: 
     - master
  #workflow_dispatch:

jobs:
  build-and-run:
    runs-on: ubuntu-latest

    steps:
      - name: checkout code
        uses: actions/checkout@v3
      

      - name: Configure aws credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
       

      # - name: login to DockerHub
      #   uses: docker/login-actions@v3
      #   with:
      #       username: secrets.DockerUsername
      #       password: secrets.DockerPassword



        


      - name: Login to ecr
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, push docker image to amazon ecr
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: attendance
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker tag $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:latest
          echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest

  terraform-deploy:
    needs: build-and-run
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./terrraform
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.2.0

      - name: Terraform Init
        run: terraform init
        
      - name: Terraform Format
        run: terraform fmt -check
        continue-on-error: true

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        run: terraform plan 
        
      - name: Terraform Apply
        # if: github.ref == 'refs/heads/master' && github.event_name == 'push'
        run: terraform destroy -auto-approve
